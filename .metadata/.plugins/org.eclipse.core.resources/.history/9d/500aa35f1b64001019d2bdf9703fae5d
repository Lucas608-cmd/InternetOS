package cn.org.act.internetos;

import java.io.IOException;
import java.net.HttpURLConnection;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import cn.org.act.internetos.api.client.EventComet;
import cn.org.act.internetos.signal.AsyncSignal;
import cn.org.act.internetos.signal.HttpSignalListener;
import cn.org.act.internetos.signal.Signal;
import cn.org.act.internetos.signal.SignalListener;
import cn.org.act.internetos.signal.SyncSignal;
import cn.org.act.tools.IHttpModify;
import cn.org.act.tools.WebClient;

public class SignalDispatcher {

	public void sendSignal(HttpServletRequest request,
			HttpServletResponse response) throws IOException {
		String token = request.getParameter(Settings.TOKEN);
		//final String data = request.getReader().readLine();

		Signal signal = createSignal(request);

	    UserSpace space =(UserSpace) request.getAttribute(Settings.USERPACE);

		List<SignalListener> list = space.getMatchedSignalListener(signal);
		
		signal.sendTo(list,response.getOutputStream());

		
	}
	
	private Signal createSignal(HttpServletRequest request) throws IOException{
		Signal res=  null;
		if(request.getHeader("async")!=null){
			res = new AsyncSignal(request.getParameter("callback"));
		}else{		
			res = new SyncSignal();
		}
		
		//data
		res.setData(request.getInputStream());
		
//		try{
//			int i =request.getInputStream().read();
//			System.out.print(i);
//		}catch(Exception e){
//			System.out.print(e);
//		}
		
		//headers
		HashMap<String,String> headers = new HashMap<String,String>();
		Enumeration<String> enumeration = request.getHeaderNames();
		while(enumeration.hasMoreElements()){
			String k = enumeration.nextElement();
			headers.put(k, request.getHeader(k));
		}
		res.setHeaders(headers);
		//method
		res.setMethod(request.getMethod());
		return res;
	}
	
}
