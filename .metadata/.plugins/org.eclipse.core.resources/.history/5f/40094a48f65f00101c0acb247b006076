import java.util.concurrent.BlockingQueue;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.LinkedBlockingQueue;


public class test {
public static void main(String[] args)
{
	final BlockingQueue<String> messageQueue= new LinkedBlockingQueue<String>();
	ExecutorService executorService = Executors.newFixedThreadPool(10);
	final Future<?> task = executorService.submit(new Runnable(){

		@Override
		public void run() {
			String a = null;
			try {
				a = messageQueue.take();
				
				
			} catch (InterruptedException e) {
				if(a == null){
					messageQueue.put(a);
				}
				e.printStackTrace();
			}
		}
		
	});
}
}
