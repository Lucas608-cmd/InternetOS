function now(){return +new Date;
}amznJQ.available("jQuery",function(){var $=jQuery;
$.searchUtils=new function(){var self=this;
this.context=undefined;
this.ajaxReadyState={"NONE":-1,"UNSENT":0,"OPENED":1,"HEADERS_RECEIVED":2,"LOADING":3,"DONE":4};
this.ajaxHandlerCode={"OK":0,"IGNORE":1,"RETRY":2,"RELOAD":3,"TIMEOUT":4,"ABORT":5,"FATAL":6,"INVALID_RESP":7,"INCOMPLETE_RESP":8,"PAGELET_FATAL":9,"DEBUG_NOAJAX":10};
this.serverCode={"ERROR":-1,"OK":200,"TIMEOUT":408};
this.cacheName={"HISTORY":"History","PREDICTIVE":"Predictive","GEN_SESSION":"GenSession","GEN_REQUEST":"GenRequest"};
this.sectionName={"ATF":"ATF","BTF":"BTF","NONE":"NONE"};
this.commaEncoding={"URI_REGEX":/%2C/gi,"RH_ENCODING":"%5Cc"};
this.NOTFOUND=-1;
this.hashre=/#.*/;
this.pagere=/([?&=])(page=)(\d+)/;
this.sortre=/([?&=])(sort=)([-\w]+)/;
this.keywordsre=/([?&=])(k|keywords|field-keywords)=([^&]*)/;
this.rhre=/([?&=])(rh=)([^&]*)/;
this.sfre=/([?&=])(sf=)([^&]*)/;
this.mere=/([?&=])(me=)([^&]*)/;
this.rhkeywordssubstre=/,k:([^,]*)/;
this.rhkeywordsre=/(^|,)(k:)([^,]*)/;
this.searchaliasre=/([?&=])(search\-alias|i)=([-\w]+)/;
this.nodere=/([?&=])(node|n)=(\d+)/;
this.refre=/(ref=[-\w]+)/;
this.urlre=/\/(b|browse|s|search)([?\/]\S*)/;
this.wikiurlre=/\/wiki\/\S*\?/;
this.urlbasere=/(\S*\/(?:b|browse|s|search))[\/?]/;
this.commentre=/<!--([\s\S]*?)-->/;
this.idre=/id=\"([\S]*?)\"/;
this.sectionre=/([?&])(section=)(\w+)/;
this.reloadre=/([?&])(reload=)(\w+)/;
this.debugre=/([?&])(debug=)([^&]*)/;
this.ajaxre=/(^|,)(ajax=)({[^}]*})/;
this.jre=/(<script [^>]*jscript[^>]*>)([\s\S]*?)(<\/script>)/gi;
this.javare=/(<script [^>]*javascript[^>]*>)([\s\S]*?)(<\/script>)/gi;
this.scriptre=/<script[^>]*>([\s\S]*?)<\/script>/i;
this.trailingcommare=/,$/;
this.emptysearchre=/^[|\s]*$/;
this.imgre=/<img [^>]*[\/]?>/gi;
this.srcre=/src=\"([\S]*?)\"/i;
this.init=function(context){$.each({"PageAjax":$.pageAjax,"SearchAjax":$.searchAjax,"SearchUtils":$.searchUtils,"SearchLogger":$.searchLogger,"SearchUE":$.searchUE,"SearchPageCache":$.searchPageCache},function(name,obj){$.each(["debug","info","error","warning","assertionFailure","track"],function(i,lvl){if(obj){obj[lvl]=function(){dbg(name,lvl,arguments);
};
}});
});
self=$.searchUtils;
self.context=context;
};
this.update=function(context){self.context=$.extend(self.context,context);
};
this.getDebugParams=function(str){var vs=self.getPar(self.debugre,str);
if(vs){return vs.split(",");
}return[];
};
this.hasDebugParam=function(str,p){return $.inArray(p,self.getDebugParams(str))!=-1;
};
this.replaceDebugParams=function(str,arr){if(!str||!arr){return str;
}if(arr.length==0){return str.replace(self.debugre,"").replace(/^&/,"?");
}return str.replace(self.debugre,"$1$2"+arr.join());
};
this.removeDebugParam=function(str,d){var dp,didx;
if(!str||!d){return str;
}dp=self.getDebugParams(str);
didx=$.inArray(d,dp);
if(didx!=-1){dp.splice(didx,1);
}return self.replaceDebugParams(str,dp);
};
this.getPar=function(re,str){if(!re||!str){return undefined;
}var m=str.match(re);
return(m&&m.length>=4)?m[3]:undefined;
};
this.getGroup=function(re,str){var m=str.match(re);
return(m&&m.length>=2)?m[1]:undefined;
};
this.getPage=function(url){return parseInt(self.getPar(self.pagere,url))||1;
};
this.getSort=function(url){return self.getPar(self.sortre,url)||(self.context?self.context.defaultSort:"");
};
this.getKeywords=function(url){var words=self.getPar(self.keywordsre,url);
if(words){words=words.replace(self.commaEncoding.URI_REGEX,self.commaEncoding.RH_ENCODING);
}return words==undefined?"":words;
};
this.getRH=function(url){var rh=self.getPar(self.rhre,url)||(self.context?self.context.initRH||"":"");
return rh;
};
this.getSF=function(url){return self.getPar(self.sfre,url)||"null";
};
this.getKeywordsDisplay=function(str,extractre){var words=decodeURIComponent(str.replace(/\+/g," "));
if(extractre){words=self.getPar(extractre,words);
}if(words){words=words.replace(/\\c/g,",");
}return words==undefined?"":words;
};
this.isEmptySearch=function(keywords){keywords=self.getKeywordsDisplay(keywords);
return(keywords.match(self.emptysearchre)!=null);
};
this.prepareKeywordsForRH=function(kw){kw=encodeURIComponent(kw);
kw=kw.replace(/%2C/g,"\\c");
kw=kw.replace(/%20/g,"+");
return kw;
};
this.getSearchAlias=function(url){return self.getPar(self.searchaliasre,url);
};
this.getNode=function(url){return self.getPar(self.nodere,url);
};
this.hasSections=function(sections){return sections.length>0&&$.inArray(self.sectionName.NONE,sections)===self.NOTFOUND;
};
this.removeHash=function(url){return url.replace(self.hashre,"");
};
this.hasHash=function(url){return url.match(self.hashre)?true:false;
};
this.computeHash=function(url){var m=url.match(self.urlre);
return(m&&m.length==3)?m[2]:"";
};
this.computeHashForUrl=function(url){return this.computeHash(url);
};
this.computeBase=function(url){var m=url.match(self.urlbasere);
return(m&&m.length==2)?m[1]:"";
};
this.toSearchBase=function(url){if(url){var m=url.match(self.urlre);
if(m&&m.length==3){if(m[1]=="b"){return url.replace(this.urlre,"/s"+"$2");
}else{if(m[1]=="browse"){return url.replace(this.urlre,"/search"+"$2");
}}}}return url;
};
this.computeKeywordsRH=function(keywords){var rhval=self.extractBrowseLadder();
if(keywords){rhval+=encodeURIComponent(",k:")+keywords;
}return rhval;
};
this.extractBrowseLadder=function(){return $("#refinements").attr("data-browseladder");
};
this.extractBaseRH=function(){return $("#refinements").attr("data-baserh");
};
this.hasSameBrowseLadder=function(rhA,rhB){var aMap=this.getRHNodesAsMap(rhA);
var bMap=this.getRHNodesAsMap(rhB);
return aMap.equals(bMap);
};
this.getRHNodesAsMap=function(rh){var aMap=new this.Map();
if(!rh){return aMap;
}var entries=rh.split(",");
if(entries.length>0){var entry,rhKey,rhValue;
for(var x=0;
x<entries.length;
x++){entry=entries[x].split(":");
if(entry.length==2){rhKey=entry[0];
rhValue=entry[1];
if((rhKey=="n"||rhKey=="i")&&rhValue.indexOf("!")==-1){aMap.put(rhValue,rhKey);
}}}}return aMap;
};
this.buildHash=function(map){hash="?";
var len=self.getSize(map);
var k=0;
for(key in map){if(map[key]){if(k>0){hash+="&";
}hash+=key+"="+map[key];
}k++;
}return hash;
};
this.pageApp=function(){return $("#main").attr("data-app");
};
this.pageStructure=function(){return $("div#main").attr("data-page");
};
this.reconstructUrl=function(currHash){var url=self.context.initPageBaseUrl;
url+=this.normalizeHashForUrl(currHash?currHash:self.context.initPageHash);
return this.toSearchBase(url);
};
this.baseAjaxUrl=function(isPredictive){var protocol=location.protocol;
var hostname=location.hostname;
var port=location.port;
var appPath=self.context.useAjaxPortal?"/mn/search/ajax":"/gp/search/ajax";
if((self.pageApp()!="gp/search"||self.pageStructure()!="results")&&self.context.gurupaAjaxAllowed&&!isPredictive){appPath="/gp/search/ajaxportal";
}return protocol+"//"+hostname+(port?":"+port:"")+appPath;
};
this.constructAjaxUrl=function(fromHash,currHash,sections,isPredictive){var url=this.baseAjaxUrl(isPredictive);
var hash=currHash||self.context.initPageHash||"";
hash=this.normalizeHashForUrl(hash);
url+=hash;
url+="&tab="+self.context.tabID;
url+="&pageTypeID="+self.context.pageTypeID;
if(self.context.kindleMID){url+="&kindleMID="+self.context.kindleMID;
}if(self.context.cCountry){url+="&cCountry="+self.context.cCountry;
}if(self.context.sai){url+="&sai="+self.context.sai;
}url+="&fromHash="+encodeURIComponent(fromHash);
if(self.context.initRH){url+=!fromHash?"&fromRH="+self.context.initRH:!currHash?"&currRH="+self.context.initRH:"";
}if(sections){url+="&section="+sections.join();
}url+="&fromApp="+encodeURIComponent(self.pageApp());
url+="&fromPage="+encodeURIComponent(self.pageStructure());
url+="&version=2";
return url;
};
this.getContextualAjaxUrlParams=function(){var params={};
if(self.context.kindleMID){params.kindleMID=self.context.kindleMID;
}if(self.context.cCountry){params.cCountry=self.context.cCountry;
}if(self.context.sai){params.sai=self.context.sai;
}return params;
};
this.isValidHash=function(hash){return hash===""||hash.match(this.rhre)||hash.match(this.mere);
};
this.normalizeHashForUrl=function(hash){if(!hash||hash.charAt(0)=="?"||hash.charAt(0)=="/"){return hash;
}var queryIndex=hash.indexOf("?"),urlSuffix;
if(queryIndex==-1){urlSuffix="?"+((hash.charAt(0)=="&")?hash.substring(1):hash);
}else{var slashIndex=hash.indexOf("/");
var minIndex=(slashIndex==-1)?queryIndex:Math.min(slashIndex,queryIndex);
urlSuffix=hash.substring(minIndex);
}this.warning("normalizeHashForUrl","BAD HASH",hash);
return urlSuffix;
};
this.imgLoaded=function(img){if(img.complete||img.naturalWidth){return true;
}return false;
};
this.getKeys=function(obj){var keys=[];
for(var key in obj){keys.push(key);
}return keys;
};
this.getSize=function(obj){var size=0,key;
for(key in obj){if(obj.hasOwnProperty(key)){size++;
}}return size;
};
this.inObjectArray=function(prop,val,array){for(var i in array){if(array[i][prop]==val){return i;
}}return -1;
};
this.Map=function(){var m={};
var clear=function(){m={};
};
var get=function(k){return m[k];
};
var keys=function(){var ks=[];
for(k in m){ks.push(k);
}return ks;
};
var put=function(k,v){var t=m[k];
m[k]=v;
return t;
};
var remove=function(k){var t=m[k];
delete m[k];
return t;
};
var size=function(){return keys().length;
};
var values=function(){var vs=[];
for(k in m){vs.push(m[k]);
}return vs;
};
var equals=function(otherMap){if(!otherMap){return false;
}if(size()!=otherMap.size()){return false;
}for(k in m){if(get(k)!=otherMap.get(k)){return false;
}}return true;
};
return{clear:clear,get:get,keys:keys,put:put,remove:remove,size:size,values:values,equals:equals};
};
this.separateScripts=function(html){var javascripts,jscripts;
if(html){javascripts=html.match(self.javare);
if(javascripts){html=html.replace(self.javare,"");
}jscripts=html.match(self.jre);
if(jscripts){html=html.replace(self.jre,"");
}}return{"strippedHTML":html,"JScripts":jscripts,"Javascripts":javascripts};
};
this.insertScripts=function(div,javascripts,jscripts,append){if(javascripts){var containerId=div+"_ajaxJavascripts";
self.appendHiddenDiv(div,containerId,append);
$.each(javascripts,function(){var m=this.match(self.scriptre);
if(m&&m.length==2){self.insertJavascript(containerId,m[1]);
}});
}if(jscripts){var containerId=div+"_ajaxJScripts";
self.appendHiddenDiv(div,containerId,append);
var str="&nbsp;";
$.each(jscripts,function(){str+=this.replace("<script","<script DEFER");
});
if(append){document.getElementById(containerId).innerHTML+=str;
}else{document.getElementById(containerId).innerHTML=str;
}}};
this.appendHiddenDiv=function(mainId,newId,append){var existingDiv=$("#"+newId);
if(append&&existingDiv.length!=0){existingDiv.hide();
return;
}existingDiv.remove();
$('<div id="'+newId+'"/>').appendTo($("#"+mainId)).hide();
};
this.insertJavascript=function(div,data){if(data){var divElement=document.getElementById(div)||document.documentElement,script=document.createElement("script");
script.type="text/javascript";
script.text=data;
divElement.appendChild(script);
}};
this.tagStart=function(object){if(!object.tagName){return"";
}var openTag="<"+object.tagName;
var elAttributes=object.attributes;
var attrs="";
for(var i=0;
i<elAttributes.length;
i++){if(elAttributes[i].specified){attrs+=" "+elAttributes[i].nodeName+'="'+elAttributes[i].nodeValue+'"';
}}return openTag+attrs+">";
};
this.tagEnd=function(object){if(!object.tagName){return"";
}return"</"+object.tagName+">";
};
this.elementHtml=function(elementId){var object=document.getElementById(elementId);
return self.elementHtmlByDom(object);
};
this.elementHtmlByDom=function(object){if(!object){return undefined;
}var val=object.innerHTML;
if(val==undefined){val=object.nodeValue;
}return self.tagStart(object)+val+self.tagEnd(object);
};
this.extractImgSrc=function(data){var imgs=data?data.match(self.imgre):null;
if(!imgs){return[];
}var srcs=[];
$.each(imgs,function(){var m=this.match(self.srcre);
if(m&&m.length==2&&$.inArray(m[1],srcs)==-1){srcs.push(m[1]);
}});
return srcs;
};
this.precacheImages=function(data){var imgs=this.extractImgSrc(data);
if(imgs&&imgs.length){if($.browser.msie){var html="";
$.each(imgs,function(i,val){html+='<img src="'+val+'"/>';
self.debug("ie precache",val);
});
this.appendHiddenDiv("ajaxData","precachedATFImages");
$("#precachedATFImages").append(html);
}else{$.each(imgs,function(i,val){var imgObj=new Image();
imgObj.src=val;
self.debug("precache",val);
});
}}};
this.shouldReload=function(status){return status==this.ajaxHandlerCode.TIMEOUT||status==this.ajaxHandlerCode.RELOAD||status==this.ajaxHandlerCode.FATAL||status==this.ajaxHandlerCode.INVALID_RESP||status==this.ajaxHandlerCode.INCOMPLETE_RESP||status==this.ajaxHandlerCode.PAGELET_FATAL||status==this.ajaxHandlerCode.DEBUG_NOAJAX;
};
this.insertCss=function(cssText){$("head").append($(cssText).attr({type:"text/css"}));
};
this.loadCss=function(cssHref){$("head").append($("<link/>").attr({type:"text/css",href:cssHref,rel:"stylesheet"}));
};
this.getNames=function(html,label){var str="";
if(html){var names="";
$("div[name]",html).each(function(){var elem=$(this);
if(elem.hasClass("result")){names+=" "+elem.attr("name");
}});
if(names){str+=label+names;
}}return str;
};
var getDebugMsg=function(comp,msg){msg=Array.prototype.slice.call(msg);
return comp+": "+msg.join(" ");
};
var dbg=(typeof(goN2Debug)!="undefined")?function(comp,lvl,msg){if(!msg||!msg.length||msg[0].match(/^\s*$/)){return;
}msg=getDebugMsg(comp,msg);
var f=goN2Debug[lvl];
if(f&&typeof(f)=="function"){goN2Debug[lvl](msg);
}}:function(){};
};
});
amznJQ.available("jQuery",function(){var $=jQuery;
$.searchUE=new function(){var ueActivityAllowed=false;
var ueDataEnabled=false;
var rid;
var prevRid;
var ueDataSender;
var sessionContext;
var isUEDataEnabled=function(){return ueDataEnabled;
};
var setUEActivity=function(ueActivityFlag){ueActivityAllowed=ueActivityFlag;
};
var isUEActivityAllowed=function(){return isUEDataEnabled()&&ueActivityAllowed;
};
var savePrevRid=function(){prevRid=rid;
};
var updateRid=function(newRid){if(!isUEActivityAllowed()){return;
}if(newRid!==undefined){ue.id=rid=newRid;
$.searchUE.info("UE: Rid updated to : "+newRid);
}};
var prepareForNewPageLoad=function(isBookmark){if(!isUEActivityAllowed()){return;
}if(ueDataSender===undefined){ueDataSender=window.uex;
}if(sessionContext.suppressBookmarkLog){if(isBookmark){window.uex=function(marker){};
return;
}window.uex=ueDataSender;
}send("ul");
reset();
timeStamp("ue");
timeStamp("bb");
};
var reset=function(){if(!isUEActivityAllowed()){return;
}if(window.search_t0){ue.t0=window.search_t0=now();
document.ue_backdetect.ue_back.value="1";
ue.t=[];
ue.a="";
ue.e="";
ue.ec=0;
ue.s=1;
ue.r.ld=0;
ue.r.ul=0;
ue.r.oe=0;
$.searchUE.info("UE: UEData Reset");
}};
var timeStamp=function(ueMarker){if(!isUEActivityAllowed()){return;
}uet(ueMarker);
$.searchUE.warning("UE: Timestamp : "+ueMarker);
};
var send=function(event){if(!isUEActivityAllowed()){return;
}uex(event);
$.searchUE.info("UE: Send : "+event+" with data "+ue.a);
};
var manageLoad=function(){if(!isUEActivityAllowed()){return;
}if(ueDataEnabled){$.searchUE.info("UE: Checking if load UEData can be sent. Markers : "+ue.t.af+" "+ue.t.cf+" "+prevRid+rid);
if(ue.t.af!==undefined&&ue.t.cf!==undefined){timeStamp("be");
ue.t.be=Math.max(ue.t.af+1,ue.t.cf+1,ue.t.be);
if(rid!=undefined&&rid!=prevRid){send("ld");
savePrevRid();
rid=undefined;
}}}};
var init=function(context){ueDataEnabled=context.ueDataEnabled;
sessionContext=context;
if(sessionContext.customAtfImageLoad&&ueDataEnabled){var origUet=window.uet;
window.uet=function(marker){$.searchUE.debug("uet:",marker);
if(window.ue&&ue.t&&!ue.t[marker]){origUet(marker);
$.searchUE.debug("Recorded:",marker,(ue.t[marker]-ue.t0));
}};
}};
var update=function(context){sessionContext=context;
return;
};
var isAtfRecorded=function(){if(!isUEActivityAllowed()){return false;
}return window.ue&&window.ue.t&&window.ue.t.af!=undefined;
};
return{isUEDataEnabled:isUEDataEnabled,isUEActivityAllowed:isUEActivityAllowed,setUEActivity:setUEActivity,savePrevRid:savePrevRid,prepareForNewPageLoad:prepareForNewPageLoad,updateRid:updateRid,reset:reset,timeStamp:timeStamp,send:send,manageLoad:manageLoad,init:init,update:update,atfRecorded:isAtfRecorded};
};
});
amznJQ.available("jQuery",function(){var $=jQuery;
$.searchLogger=new function(){this.clientID="sx";
this.clogLimit=undefined;
this.items={};
this.clientNS="client";
this.loggingEnabled=false;
this.setData=function(key,value){if(this.loggingEnabled&&window.clientLogger){this.items[key]=value;
}};
this.setElapsedData=function(key,initialTime){if(this.loggingEnabled&&window.clientLogger&&typeof initialTime=="number"){var elapsed=now()-initialTime;
this.items[key]=elapsed;
}};
this.flush=function(){if(!this.loggingEnabled||!window.clientLogger){this.info("flush","client logging disabled");
this.items={};
return;
}var clog=window.clientLogger;
var len=0;
var buf="";
var key;
var param;
for(key in this.items){param=escape(key)+"="+escape(this.items[key]);
if(len+param.length>this.clogLimit){this.info("flush",buf);
clog.sendPreparedCLOGEntry(this.clientID,this.clientNS,buf);
len=0;
buf="";
}if(len>0){len++;
buf+="&";
}len+=param.length;
buf+=param;
}if(len>0){this.info("flush",buf);
clog.sendPreparedCLOGEntry(this.clientID,this.clientNS,buf);
}this.items={};
};
this.init=function(context){var logger=this;
logger.loggingEnabled=context.clientLoggingEnabled;
if(logger.loggingEnabled){amznJQ.available("clientLog",function(){var clog=window.clientLogger;
clog.addDebugCallback(function(msg){});
logger.clogLimit=1921-clog.getBaseURL().length-clog.version.length-logger.clientID.length-logger.clientNS.length-clog.getMarketplaceID().length;
});
}};
this.updateRid=function(rid){if(this.clog){this.info("updateRid",rid);
window.clientLogger.getRequestID=function(){return rid;
};
}};
this.update=function(context){return;
};
};
});
amznJQ.available("jQuery",function(){var $=jQuery;
$.searchPageCache=new function(){var ssPrefix="amzn_sx_cache_";
var keysortre=/^([^*]*)\*/;
var keypagere=/\*([^*]*)\*/;
var keyrhre=/\*[^*]*\*(.*)\*/;
var keysfre=/\*[^*]*\*[^*]*\*(.*)$/;
var self;
var sessionContext;
var utils=$.searchUtils;
var cache=function(name,storedSections){var name=name;
var sections=storedSections;
var cache={};
var cacheStartTime=0;
var cacheMaxLife=900000;
var cacheMaxSize=10;
var initCacheEntry=function(key,initValue){if(!cacheStartTime){cacheStartTime=now();
}var cacheEntry=cache[key];
if(!cacheEntry||initValue){cacheEntry=newEntry(key);
}return cacheEntry;
};
var newEntry=function(key){cache[key]={};
var cacheEntry=cache[key];
cacheEntry.content=[];
cacheEntry.ready=false;
cacheEntry.unsupported=false;
cacheEntry.callback=undefined;
return cacheEntry;
};
var expired=function(){var cacheSize=$.searchUtils.getSize(cache);
var cacheLife=now()-cacheStartTime;
return cacheLife>cacheMaxLife||cacheSize>=cacheMaxSize;
};
var deleteKey=function(key){if(key&&cache[key]){delete cache[key];
notify("cache-entry-delete",{"cache":name,"key":key});
}};
var clear=function(key){cache={};
cacheStartTime=0;
notify("cache-clear",{"cache":name});
};
var write=function(key,contentItem,firstWrite){if(firstWrite&&expired()){clear();
}var cacheEntry=initCacheEntry(key,firstWrite);
cacheEntry.content.push(contentItem);
if(contentItem&&contentItem.tagId){self.debug("-- "+contentItem.tagId+":");
}notify("cache-entry-write",{"cache":name,"key":key,"data":contentItem});
return cacheEntry;
};
var getEntry=function(key,initValue){if(expired()){clear();
}var entry=cache[key];
if(initValue&&entry){entry=newEntry(key);
}return entry;
};
var getSections=function(key){return sections;
};
var getName=function(key){return name;
};
var printStats=function(debug){var dbgStatements=[];
dbgStatements.push(name+" "+"Num Keys: "+$.searchUtils.getSize(cache));
dbgStatements.push("Max Keys:"+cacheMaxSize+" Time left: "+((cacheMaxLife-(now()-cacheStartTime))/60000)+" mins.");
for(var key in cache){dbgStatements.push("-- Key: "+key+" Num pagelets: "+$.searchUtils.getSize(cache[key].content));
for(var i in cache[key].content){dbgStatements.push("---- "+i+". Pagelet: "+cache[key].content[i].tagId+". Status: "+cache[key].content[i].data.status+". Type: "+cache[key].content[i].data.type);
var elemNames=$.searchUtils.getNames(cache[key].content[i].data.value,"");
if(elemNames){dbgStatements.push("------ Names:"+elemNames);
}}}if(debug){for(s in dbgStatements){debug(dbgStatements[s]);
}}else{var fullCacheDump=$.searchAjaxDebug?$.searchAjaxDebug.dump(cache):"";
return"<b>"+name+"</b> <br/>"+dbgStatements.join("<br/>")+"<br/>"+fullCacheDump+"<br/> -------------------------- <br/>";
}};
var restoreCache=function(){var JSON=window.JSON,sessionStorage=window.sessionStorage,sc;
if(JSON&&sessionStorage&&sessionStorage[ssPrefix+name]){try{sc=JSON.parse(sessionStorage[ssPrefix+name]);
}catch(e){self.debug("restoreCache","Invalid JSON in session storage, removing");
sessionStorage.removeItem(ssPrefix+name);
return;
}cache=sc;
cacheStartTime=sessionStorage[ssPrefix+name+"_st"];
self.debug("restoreCache","Loaded "+name+" cache from session storage");
}};
var storeCache=function(){var JSON=window.JSON,sessionStorage=window.sessionStorage;
if(JSON&&sessionStorage){sessionStorage[ssPrefix+name]=JSON.stringify(cache);
sessionStorage[ssPrefix+name+"_st"]=cacheStartTime;
self.debug("storeCache","Stored "+name+" cache to session storage");
}};
var notify=function(eventName,data){$(document).trigger(eventName,data);
};
return{clear:clear,deleteKey:deleteKey,getEntry:getEntry,getSections:getSections,getName:getName,initCacheEntry:initCacheEntry,printStats:printStats,restoreCache:restoreCache,storeCache:storeCache,write:write};
};
var cacheContentLoader=function(){var ajaxRequestNum=0;
var requestKey;
var hash;
var buffer=[];
var dataFetcher=$.pageAjax;
var cacheEntry;
var postProcess;
var load=function(currHash,overrideParams,predictMode,postProcessCallback){postProcess=postProcessCallback;
hash=utils.buildHash(overrideParams);
cacheEntry=getCacheEntry(buildCacheKey(hash));
if(!cacheEntry.entry){beginPredictiveEntry(hash);
var url=utils.constructAjaxUrl(currHash,hash,["ATF"],true);
url=url+"&ajp="+(predictMode||"true");
var requestKey=buildCacheKey(hash)+ajaxRequestNum+++"pred";
dataFetcher.loadStreaming(url,null,null,processResults,processError,requestKey);
return 1;
}return 0;
};
var processResults=function(callContext,pagelet,loadingStatus){if(pagelet.trackingInfo){if(pagelet.trackingInfo.isUnsupportedRequest){self.debug("processResults","isUnsupportedRequest",loadingStatus);
cacheEntry=getCacheEntry(buildCacheKey(hash));
if(cacheEntry&&cacheEntry.entry){cacheEntry.entry.unsupported=true;
performCacheCallback(cacheEntry,false);
}return utils.ajaxHandlerCode.IGNORE;
}else{return utils.ajaxHandlerCode.OK;
}}var savedArgs={callContext:callContext,pagelet:pagelet,loadingStatus:loadingStatus};
buffer.push(savedArgs);
if(loadingStatus==utils.ajaxReadyState.DONE){var contents=[];
var callArgs;
var bufLen=buffer.length;
for(var i=0;
i<bufLen;
i++){callArgs=buffer[i];
var contentToSave=callArgs.pagelet[utils.getKeys(callArgs.pagelet)[0]];
contents.push(contentToSave);
}if(postProcess){contents=postProcess(contents);
}cacheEntry=storeContent(hash,null,contents,true);
performCacheCallback(cacheEntry,true);
}return utils.ajaxHandlerCode.OK;
};
var processError=function(callContext,pagelet,loadingStatus){deleteKey(hash);
performCacheCallback(cacheEntry,false);
self.debug("processError",loadingStatus);
return utils.ajaxHandlerCode.ABORT;
};
var printStats=function(){return"The Cache Content Loader Object for "+hash;
};
return{load:load,printStats:printStats};
};
var historyCache=new cache($.searchUtils.cacheName.HISTORY,[$.searchUtils.sectionName.ATF,$.searchUtils.sectionName.BTF]);
var predictiveCache=new cache($.searchUtils.cacheName.PREDICTIVE,[$.searchUtils.sectionName.ATF]);
var genSessionCache=new cache($.searchUtils.cacheName.GEN_SESSION,[$.searchUtils.sectionName.NONE]);
var genRequestCache=new cache($.searchUtils.cacheName.PREDICTIVE,[$.searchUtils.sectionName.NONE]);
var init=function(context){self=$.searchPageCache;
self.sessionContext=context;
};
var update=function(context){self.sessionContext=$.extend(self.sessionContext,context);
};
var clearPredictiveCache=function(){predictiveCache.clear();
genRequestCache.clear();
};
var getCacheEntry=function(key,cacheToUse){var cache=!cacheToUse?historyCache:cacheToUse;
var cacheEntry=cache.getEntry(key);
if(!cacheEntry&&!cacheToUse){cache=predictiveCache;
cacheEntry=cache.getEntry(key);
}return{"entry":cacheEntry,"cache":(!cacheEntry?undefined:cache)};
};
var getContentViaCallBack=function(h,callback){var key=buildCacheKey(h);
self.debug("getContentViaCallBack",key);
var cacheEntry=getCacheEntry(key);
var entry=cacheEntry.entry;
if(entry){entry.callback=callback;
performCacheCallback(entry,true);
}return entry?true:false;
};
var getContent=function(h){var key=buildCacheKey(h);
self.debug("getContent",key);
var cacheEntry=getCacheEntry(key);
return cacheEntry.entry?cacheEntry.entry.content:[];
};
var getGeneralContent=function(url,clientId,isRequestScope){var key=buildCacheKey(url)+"-"+clientId;
self.debug("getGeneralContent for:",key,"from",(isRequestScope?"GEN_REQUEST":"GEN_SESSION"));
var cache=isRequestScope?genRequestCache:genSessionCache;
var cacheEntry=getCacheEntry(key,cache);
return cacheEntry.entry?cacheEntry.entry.content:[];
};
var deleteKey=function(h){var key=buildCacheKey(h);
self.debug("deleteKey",key);
var cacheEntry=getCacheEntry(key);
if(cacheEntry.entry){cacheEntry.cache.deleteKey(key);
}};
var performCacheCallback=function(entry,isOK){self.debug("performCacheCallback");
if(entry&&entry.ready&&entry.callback){isOK=entry.unsupported?false:isOK;
entry.callback(entry.content,isOK);
entry.callback=undefined;
}};
var beginPredictiveEntry=function(h){predictiveCache.initCacheEntry(buildCacheKey(h));
};
var getCachedSections=function(h){var key=buildCacheKey(h);
self.debug("getCachedSections",key);
var cacheEntry=getCacheEntry(key);
var cache=cacheEntry.cache;
var cachedSections={"cache":"","sections":[$.searchUtils.sectionName.NONE]};
if(cacheEntry.entry){cachedSections.cache=cache.getName();
cachedSections.sections=cache.getSections();
}return cachedSections;
};
var storeContent=function(h,overrides,contents,isPredictive){var key=buildCacheKey(h,overrides);
var cache=isPredictive?predictiveCache:historyCache;
var cacheEntry=getCacheEntry(key);
var firstWrite=true;
if(cacheEntry.cache&&!cacheEntry.entry.ready){firstWrite=false;
}var len=contents.length;
self.debug("storeContent",(isPredictive?"PRED":"HIST"),("Key="+key),("firstWrite="+firstWrite));
for(var i=0;
i<len;
i++){cacheEntry=cache.write(key,contents[i],firstWrite);
firstWrite=false;
}cacheEntry.ready=true;
return cacheEntry;
};
var storeGeneralContent=function(url,overrides,clientId,contents,isRequestScope){var key=buildCacheKey(url,overrides)+"-"+clientId;
var cache=isRequestScope?genRequestCache:genSessionCache;
var cacheEntry=getCacheEntry(key,cache);
var firstWrite=true;
if(cacheEntry.cache&&!cacheEntry.entry.ready){firstWrite=false;
}var len=contents.length;
self.debug("storeContent",(isRequestScope?"GEN_REQUEST":"GEN_SESSION"),("Key="+key),("firstWrite="+firstWrite));
for(var i=0;
i<len;
i++){cacheEntry=cache.write(key,contents[i],firstWrite);
firstWrite=false;
}cacheEntry.ready=true;
return cacheEntry;
};
var buildCacheKey=function(h,overrides){var hrh=h;
if(!h){h=self.sessionContext.initPageHash;
hrh="";
}var sort=(overrides&&overrides.sort)?overrides.sort:$.searchUtils.getSort(h),page=(overrides&&overrides.page)?overrides.page:$.searchUtils.getPage(h),rh=(overrides&&overrides.rh)?overrides.rh:$.searchUtils.getRH(hrh),sf=(overrides&&overrides.sf)?overrides.sf:$.searchUtils.getSF(h);
return sort+"*"+page+"*"+rh+"*"+sf;
};
var deconstructCacheKey=function(key){var sort=$.searchUtils.getGroup(keysortre,key),page=$.searchUtils.getGroup(keypagere,key),rh=$.searchUtils.getGroup(keyrhre,key),sf=$.searchUtils.getGroup(keysfre,key);
return{"sort":sort,"page":page,"rh":rh,"sf":sf};
};
var loadPredictiveContent=function(currHash,rhOverrideList,predictMode,postCacheCallback){var numLoadedEntries=0;
if(rhOverrideList&&rhOverrideList.length){var len=rhOverrideList.length;
var rhOverride;
for(var i=0;
i<len;
i++){rhOverride=rhOverrideList[i];
if(rhOverride){var loader=new cacheContentLoader();
numLoadedEntries+=loader.load(currHash,rhOverride,predictMode,postCacheCallback);
}}}return numLoadedEntries;
};
var printStats=function(){return predictiveCache.printStats()+historyCache.printStats();
};
var storeCache=function(){historyCache.storeCache();
};
var restoreCache=function(){historyCache.restoreCache();
};
return{clearPredictiveCache:clearPredictiveCache,getCacheKey:buildCacheKey,getCacheKeyParts:deconstructCacheKey,getCachedSections:getCachedSections,getContent:getContent,getContentViaCallBack:getContentViaCallBack,init:init,loadPredictiveContent:loadPredictiveContent,printStats:printStats,restoreCache:restoreCache,storeCache:storeCache,storeContent:storeContent,update:update,storeGeneralContent:storeGeneralContent,getGeneralContent:getGeneralContent};
};
});
amznJQ.available("jQuery",function(){var $=jQuery,ph=$.pageHooks=new function(){var advance,cur,debug,doc,iframe,options={debug:function(){},iframe:"<iframe id='phie' style='display:none' src='javascript:false;'></iframe>",pollInterval:50},pi,poll;
function extractHash(s){var i=s.indexOf("#");
return(i==-1)?"":s.substring(i+1);
}function getHash(){return extractHash(location.href);
}function setHash(h){debug("set hash",h);
location.hash=h;
}function tr(h){oldHash=cur;
cur=h;
doc.trigger("ph",[oldHash,h]);
}function update(customOptions){debug("update",options,customOptions);
$.extend(options,customOptions);
}function replace(url,full){if(pi){clearTimeout(pi);
pi=undefined;
}if(full){location.href=url;
}else{location.replace(url);
}}this.bind=function(f){$(document).bind("ph",f);
};
this.init=function(customOptions){options=$.extend(options,customOptions);
ch=getHash();
doc=$(document);
debug=options.debug||debug;
debug("init");
var ie=$.browser.msie,dm=document.documentMode;
if(ie&&(dm===undefined||dm<8)){debug("needs iframe");
iframe=$("#phie");
iframe=(iframe.length?iframe:$(options.iframe).prependTo("body"))[0];
advance=function(h,r){debug("advance",h);
try{var i=iframe.contentWindow.document;
i.open();
i.close();
i.location.hash=h;
}catch(e){if(!r){setTimeout(function(){advance(h,200);
},r);
}}};
poll=function(){var h=getHash(),hChange=(cur!=h),ih;
try{ih=extractHash(iframe.contentWindow.document.location.href);
}catch(e){ih=cur;
}if(hChange||cur!=ih){if(hChange){debug("poll",cur,h);
tr(h);
advance(h);
}else{debug("poll-iframe",cur,ih);
tr(ih);
setHash(ih);
}}};
advance(ch);
}else{advance=function(h){debug("advance",h);
if(getHash()!=h){setHash(h);
}};
if("onhashchange" in window){window.onhashchange=function(){var h=getHash();
debug("onhashchange",h);
tr(h);
};
}else{poll=function(){var h=getHash();
if(h!=cur){debug("poll",cur,h);
tr(h);
}};
}}ph.advance=advance;
ph.update=update;
ph.replace=replace;
tr(ch);
if(!pi&&poll){debug("polling");
pi=setInterval(poll,options.pollInterval);
}};
};
amznJQ.declareAvailable("ph");
});
amznJQ.available("jQuery",function(){var $=jQuery;
$.pageAjax=new function(){var defaultOptions={"timeout":6000,"retries":0};
var self,utils,ph,timeout,delimiter,options,reload=0,scripttokenreg=new RegExp("<<<SCRIPT_END>>>","g"),requestLog=[];
this.newRequest=function(reqKey,url){requestLog[reqKey]={loading:[url],tryCount:1,dataInx:0,xhrs:[],callbacks:[]};
};
function requestEntry(reqKey){return requestLog[reqKey];
}this.removeRequest=function(reqKey,tryInx){if(requestEntry(reqKey)){var outstandingTry=0,rl=requestLog[reqKey];
for(var i in rl.loading){if(i!=tryInx&&rl.loading[i]){outstandingTry=1;
break;
}}if(!outstandingTry){var xhr=rl.xhrs[tryInx];
if(xhr&&!xhr.usingXhr()){$(xhr.getXhrImpl()).remove();
}delete requestLog[reqKey];
}}};
this.isRequestLoading=function(reqKey,url,tryInx){var e=requestEntry(reqKey);
return e&&e.loading[tryInx]==url;
};
this.resetRequestLoading=function(reqKey,tryInx){var e=requestEntry(reqKey);
if(e){e.loading[tryInx]=0;
}};
this.incrRequestTries=function(reqKey,url){var e=requestEntry(reqKey);
if(e){e.loading[e.tryCount++]=url;
}};
this.getRequestTries=function(reqKey){var e=requestEntry(reqKey);
return e?e.tryCount:0;
};
this.resetDataInx=function(reqKey){var e=requestEntry(reqKey);
if(e){e.dataInx=0;
}};
this.getDataInx=function(reqKey){var e=requestEntry(reqKey);
return e?e.dataInx:0;
};
this.putDataInx=function(reqKey,inx){var e=requestEntry(reqKey);
if(e){e.dataInx=inx;
}};
this.putXhr=function(reqKey,xhr,tryInx){var e=requestEntry(reqKey);
if(e){e.xhrs[tryInx]=xhr;
}};
this.getXhr=function(reqKey,tryInx){var e=requestEntry(reqKey);
if(e){return e.xhrs[tryInx];
}};
this.putCallbacks=function(reqKey,tryInx,callbackMap){var e=requestEntry(reqKey);
if(e){e.callbacks[tryInx]=callbackMap;
}};
this.getCallbacks=function(reqKey,tryInx){var e=requestEntry(reqKey);
return e?e.callbacks[tryInx]:undefined;
};
var cleanUpRequest=function(requestKey,tryInx,xhrTimeoutId){self.removeRequest(requestKey,tryInx);
clearTimeout(xhrTimeoutId);
};
var retry=function(ajaxLoad,ajaxUrl,pageUrl,ok,err,requestKey,status){if(utils.shouldReload(status)||(status==utils.ajaxHandlerCode.RETRY&&self.getRequestTries(requestKey)>options.retries)){self.warning("retry","page load",requestKey,status);
self.pageReload(pageUrl,status);
}else{self.warning("retry","ajax reload",requestKey,status);
self.resetDataInx(requestKey);
ajaxLoad(ajaxUrl,pageUrl,undefined,ok,err,requestKey,self.getRequestTries(requestKey)+1);
}};
this.pageReload=function(pageUrl,status){if(reload){self.debug("pageReload: flag=",reload);
return;
}else{if(!pageUrl){self.warning("reload","INVALID",pageUrl,status);
return;
}}reload=1;
if(status!=utils.ajaxHandlerCode.DEBUG_NOAJAX){pageUrl+=("&ajr="+status);
}self.debug("pageReload","initiated",pageUrl);
ph.replace(pageUrl);
};
this.load=function(ajaxUrl,pageUrl,isempty_callback,success_callback,error_callback,requestKey,tryCount){var startTime=now(),tryInx=tryCount===undefined?0:tryCount-1;
if(requestEntry(reqKey)){self.incrRequestTries(requestKey,ajaxUrl);
}else{self.newRequest(requestKey,ajaxUrl);
}$.ajax({"dataType":"html","error":function(xhr,textStatus,error){var ts=now()-startTime;
if(self.isRequestLoading(requestKey,ajaxUrl,tryInx)){self.resetRequestLoading(requestKey,tryInx);
self.error("load","err",ts,error,textStatus);
var callBackContext={timeElapsed:ts,textStatus:textStatus,exception:error,xhr:xhr},hndlrCode=error_callback(callBackContext,"{}",utils.ajaxReadyState.DONE);
retry(self.load,ajaxUrl,pageUrl,success_callback,error_callback,requestKey,hndlrCode);
}else{self.warning("load","stale-err",ts,error,textStatus);
}},"success":function(data,textStatus){var ts=now()-startTime;
if(self.isRequestLoading(requestKey,ajaxUrl,tryInx)){self.resetRequestLoading(requestKey,tryInx);
var callBackContext={timeElapsed:ts,textStatus:textStatus},hndlrCode=success_callback(callBackContext,data,utils.ajaxReadyState.DONE);
if(hndlrCode==utils.ajaxHandlerCode.RELOAD||hndlrCode==utils.ajaxHandlerCode.RETRY||hndlrCode==utils.ajaxHandlerCode.TIMEOUT){retry(self.load,ajaxUrl,pageUrl,success_callback,error_callback,requestKey,hndlrCode);
}else{self.resetRequestLoading(requestKey,tryInx);
}}else{self.warning("load","stale-ok",ts,data,textStatus);
}},"timeout":timeout,"url":ajaxUrl});
};
var StreamingXhr=function(ajaxUrl,pageUrl,useIFrame,requestKey,tryInx){var requestKey=requestKey,tryInx=tryInx,abortCode,xhr,iframe,iFrameElem,eos;
if(useIFrame){var frmUrl=ajaxUrl+"&asScript=1"+"&reqKey="+encodeURIComponent(requestKey)+"&try="+tryInx;
iFrameElem='<iframe style="width:0px; height:0px; border: 0px" src="'+frmUrl+'"></iframe>';
self.debug("Using IFrame. url = "+frmUrl);
}else{if(window.XMLHttpRequest){xhr=new XMLHttpRequest();
}else{xhr=new ActiveXObject("Microsoft.XMLHTTP");
}self.debug("Using XHR");
}this.getAbortCode=function(){return abortCode;
};
this.usingXhr=function(){return xhr?true:false;
};
this.getXhrImpl=function(){return xhr?xhr:iframe;
};
this.open=function(){if(xhr){xhr.open("GET",ajaxUrl,true);
}};
this.send=function(){if(xhr){xhr.send(null);
}else{if(iFrameElem){iframe=$(iFrameElem).appendTo("body")[0];
}}};
this.abort=function(code){abortCode=code;
if(xhr){xhr.abort();
}else{if(iframe){$(iframe).remove();
var callbacks=self.getCallbacks(requestKey,tryInx),callComplete=callbacks["callComplete"],success_callback=callbacks["onSuccess"],error_callback=callbacks["onError"],statusHandler=callbacks["statusHandler"],appStatus=callComplete(success_callback,error_callback,{},utils.ajaxReadyState.LOADING,abortCode?abortCode:utils.serverCode.ERROR);
statusHandler(appStatus,utils.ajaxReadyState.LOADING);
}}};
this.errorReload=function(){self.resetRequestLoading(requestKey,tryInx);
retry(null,null,pageUrl,null,null,requestKey,utils.ajaxHandlerCode.FATAL);
};
this.isRunning=function(){return self.isRequestLoading(requestKey,ajaxUrl,tryInx);
};
};
this.handleDataChunk=function(data,encodedReqKey,tryInx){if(data){var reqKey=decodeURIComponent(encodedReqKey),callbacks=self.getCallbacks(reqKey,tryInx),callComplete=callbacks["callComplete"],success_callback=callbacks["onSuccess"],error_callback=callbacks["onError"],statusHandler=callbacks["statusHandler"],dataName=utils.getKeys(data)[0],loadingStatus=utils.ajaxReadyState.LOADING;
if(dataName=="EOS"){loadingStatus=utils.ajaxReadyState.DONE;
}var d=data[dataName].data,v;
if(d&&(v=d.value)){d.value=v.replace(scripttokenreg,"<\/script>");
}var appStatus=callComplete(success_callback,error_callback,data,loadingStatus,utils.serverCode.OK);
statusHandler(appStatus,loadingStatus);
}};
this.loadStreaming=function(ajaxUrl,pageUrl,isempty_callback,success_callback,error_callback,requestKey,tryCount){self.debug("loadStreaming: url =",ajaxUrl,"requestKey =",requestKey);
var startTime=now(),tryInx=tryCount===undefined?0:tryCount-1;
if(requestEntry(requestKey)){self.incrRequestTries(requestKey,ajaxUrl);
}else{self.newRequest(requestKey,ajaxUrl);
}var callComplete=function(success_callback,error_callback,data,xhrReadyState,xhrStatus,streamingXhr){var timeElapsed=now()-startTime;
clearTimeout(xhrTimeoutId);
if(self.isRequestLoading(requestKey,ajaxUrl,tryInx)){var callBackContext={timeElapsed:timeElapsed,xhrStatus:xhrStatus},dataObj={};
if(xhrStatus==utils.serverCode.OK){if((typeof data)=="string"){try{dataObj=eval("("+data+")");
}catch(e){self.error("Invalid JSON response: "+data);
return error_callback(callBackContext,data,utils.ajaxHandlerCode.INVALID_RESP);
}}else{dataObj=data;
}if(streamingXhr&&"EOS"==utils.getKeys(dataObj)[0]){streamingXhr.eos=1;
}if(options.enforceEOS&&xhrReadyState==utils.ajaxReadyState.DONE&&streamingXhr&&!streamingXhr.eos){return error_callback(callBackContext,dataObj,utils.ajaxHandlerCode.INCOMPLETE_RESP);
}return success_callback(callBackContext,dataObj,xhrReadyState);
}else{var errStat=utils.ajaxHandlerCode.FATAL;
if(xhrStatus==utils.serverCode.TIMEOUT){errStat=utils.ajaxHandlerCode.TIMEOUT;
}return error_callback(callBackContext,{},errStat);
}}else{self.warning("load","STALE RESPONSE","state=",xhrReadyState);
self.resetDataInx(requestKey);
return utils.ajaxHandlerCode.IGNORE;
}};
var statusHandler=function(appStatus,xhrReadyState){if(utils.shouldReload(appStatus)||appStatus==utils.ajaxHandlerCode.RETRY){self.debug("statusHandler","retrying",appStatus);
self.resetRequestLoading(requestKey,tryInx);
retry(self.loadStreaming,ajaxUrl,pageUrl,success_callback,error_callback,requestKey,appStatus);
}else{if(appStatus==utils.ajaxHandlerCode.ABORT){self.debug("statusHandler","aborting");
cleanUpRequest(requestKey,tryInx,xhrTimeoutId);
}else{if(appStatus==utils.ajaxHandlerCode.OK||appStatus==utils.ajaxHandlerCode.IGNORE){if(xhrReadyState==utils.ajaxReadyState.DONE){self.debug("statusHandler","DONE");
cleanUpRequest(requestKey,tryInx,xhrTimeoutId);
}}}}};
if(isempty_callback&&typeof(isempty_callback)=="function"&&isempty_callback({},"{}",utils.ajaxReadyState.NONE)){var appStatus=callComplete(success_callback,error_callback,"{}",utils.ajaxReadyState.DONE,utils.serverCode.OK);
statusHandler(appStatus,utils.ajaxReadyState.DONE);
return;
}var streamingXhr=new StreamingXhr(ajaxUrl,pageUrl,options.useIFrameForAJAX,requestKey,tryInx);
self.putXhr(requestKey,streamingXhr,tryInx);
self.putCallbacks(requestKey,tryInx,{"callComplete":callComplete,"statusHandler":statusHandler,"onSuccess":success_callback,"onError":error_callback});
if(streamingXhr.usingXhr()){var xhr=streamingXhr.getXhrImpl();
xhr.onreadystatechange=function(){if(xhr.readyState==utils.ajaxReadyState.LOADING||xhr.readyState==utils.ajaxReadyState.DONE){var appStatus=utils.ajaxHandlerCode.OK,responseText,status;
try{status=xhr.status;
responseText=xhr.responseText;
}catch(e){if(xhr.readyState==utils.ajaxReadyState.LOADING){return;
}else{status=utils.serverCode.ERROR;
}}if(status==utils.serverCode.OK){var chunks=chunkNewData(responseText,requestKey);
if(chunks.length>0){for(var i in chunks){var loadingStatus=utils.ajaxReadyState.LOADING;
if(xhr.readyState==utils.ajaxReadyState.DONE&&i==chunks.length-1){loadingStatus=utils.ajaxReadyState.DONE;
}appStatus=callComplete(success_callback,error_callback,chunks[i],loadingStatus,status,streamingXhr);
if(appStatus!=utils.ajaxHandlerCode.OK){break;
}}}else{if(xhr.readyState==utils.ajaxReadyState.DONE){appStatus=callComplete(success_callback,error_callback,"{}",utils.ajaxReadyState.DONE,status,streamingXhr);
}}}else{var abortCode=streamingXhr.getAbortCode();
appStatus=callComplete(success_callback,error_callback,responseText,xhr.readyState,abortCode||status);
}statusHandler(appStatus,xhr.readyState);
}};
}streamingXhr.open();
streamingXhr.send();
var streamingXhrTimeout=function(){if(streamingXhr){streamingXhr.abort(utils.serverCode.TIMEOUT);
}},xhrTimeoutId=setTimeout(streamingXhrTimeout,timeout);
return streamingXhr;
};
var chunkNewData=function(responseText,requestKey){var startInx=self.getDataInx(requestKey),lastDelimInx=responseText.lastIndexOf(delimiter),chunks=[];
if(lastDelimInx>startInx){chunks=responseText.substr(startInx,lastDelimInx-startInx);
self.putDataInx(requestKey,lastDelimInx+delimiter.length);
}if(chunks.length>0){chunks=chunks.split(delimiter);
}return chunks;
};
this.init=function(customOptions){self=$.pageAjax;
utils=$.searchUtils;
ph=$.pageHooks;
options=$.extend(defaultOptions,customOptions);
timeout=options.pageTimeout;
delimiter=options.streamDelimiter.replace(/-/g,"");
};
this.update=function(customOptions){$.extend(options,customOptions);
};
this.printStats=function(){self.debug("Request Log:","size:",utils.getSize(requestLog));
};
};
});
amznJQ.available("jQuery",function(){amznJQ.available("search-js-autocomplete",function(){amznJQ.available("search-js-general",function(){var $=jQuery;
$.searchAjax=new function(){var pa;
var ph;
var sCache;
var utils;
var sLogger;
var sUE;
var ajaxDebug;
var sw;
var mDivs;
var self;
var sectionDivsToHide={ATF:"#center",BTF:"#centerBelow, #centerBelowExtra, #footer"};
var otherDivsToHide="#top, #leftNav";
var sections=["ATF","BTF"];
var spinner=$("<div class='loadingSpinner'>&nbsp;</div>");
var spinnerWidth=52;
var spinnerHeight=152;
var spinnerPosition="centerBelow";
var PredictiveDivsConfig=[{id:"result-count-only-next"},{id:"featuredEntity-next",js:["$('#featuredEntity:empty').remove();"]},{id:"didYouMean-next",js:["$('#didYouMean:empty').remove();"]},{id:"bestRefinement-next",js:["$('#bestRefinement:empty').remove();"]},{id:"brsc-next",js:["$('#brsc:empty').remove();"]},{id:"results-atf-next",js:["$('#center').show();","$.searchAjax.BTFJsLoaded();"]}];
var PageRegionsConfig=[{id:"top",js:["$('#top').css('visibility', 'visible');"]},{id:"center",js:["$('#center').show();","finalizeHistoryATF();"]},{id:"FOLD"},{id:"centerBelow",js:["$('#centerBelow').show();"]},{id:"leftNav",js:["$('#leftNav').css('visibility', 'visible')"]},{id:"centerBelowExtra",js:["$('#centerBelowExtra').show();"]},{id:"ajaxData"}];
var supportedPages=["results"];
var sessionContext={};
var addToSessionContext=function(){var initPageUrl=utils.removeHash(location.href);
return{debugEnabled:typeof(goN2Debug)!="undefined",ajaxDebugEnabled:$.searchAjaxDebug!=undefined,ueDataEnabled:window.ue&&typeof(uet)=="function"&&typeof(uex)=="function",initPageUrl:initPageUrl,initPageBaseUrl:utils.computeBase(location.href),initPageHash:utils.computeHash(initPageUrl),initRH:utils.extractBaseRH(),canPrefetch:true};
};
var ajaxRequestNum=0;
var jqOnReady=amznJQ.onReady;
var jqOnReadyArgs=[];
var requestContext={};
var issModel={};
var predictionModel={};
function searchBar(){return $("#twotabsearchtextbox");
}this.init=function(context){self=$.searchAjax;
ph=$.pageHooks;
pa=$.pageAjax;
sCache=$.searchPageCache;
utils=$.searchUtils;
sLogger=$.searchLogger;
sUE=$.searchUE;
ajaxDebug=$.searchAjaxDebug;
sw=$.searchSitewide;
sessionContext=$.extend(addToSessionContext(),context);
var dbgContext=utils.getPar(utils.ajaxre,utils.getPar(utils.debugre,location.search));
if(dbgContext&&sessionContext.intReq){try{dbgContext=eval("("+decodeURIComponent(dbgContext)+")");
}catch(e){self.debug("Invalid debug ajax value");
}sessionContext=$.extend(sessionContext,dbgContext);
}ph.bind(self.requestHandler);
utils.init(sessionContext);
mDivs=$.searchAjaxMissingDivs=new utils.Map();
sLogger.init(sessionContext);
sUE.init(sessionContext);
sCache.init(sessionContext);
if(sessionContext.useSessionStorage){sCache.restoreCache();
}pa.init(sessionContext);
if(sessionContext.debugEnabled){sessionContext.debug=function(){var str="",i=arguments.length;
while(i-->0){str=arguments[i]+(str?" ":"")+str;
}str="PageHooks: "+str;
if(window.goN2Debug){;
}if(window.console&&window.console.log){console.log(str);
}};
}ph.init(sessionContext);
if(sessionContext.predictOnPaste){searchBar().bind("paste",function(e){setTimeout(function(){predictPaste(e);
},1);
});
}sessionContext.initialized=true;
};
this.isInitialized=function(){return sessionContext.initialized;
};
this.requestHandler=function(e,fromHash,currHash){if(fromHash&&fromHash.charAt(0)==="%"){fromHash=decodeURIComponent(fromHash);
}if(currHash&&currHash.charAt(0)==="%"){currHash=decodeURIComponent(currHash);
}var timeNow=now();
$.requestContext=requestContext={fromHash:fromHash,currHash:currHash,timeZero:timeNow,timeSinceLast:timeNow};
requestContext.pageApp=utils.pageApp();
requestContext.pageStructure=utils.pageStructure();
var isBookmarkPage=false;
if(fromHash===undefined){if(currHash){isBookmarkPage=true;
}else{postLoad("");
return;
}}if(sessionContext.ajaxOnCrossAppPage&&!sw.isLoaded()){sw.loadSiteWideHandler(e,fromHash,currHash);
}sessionContext.canPrefetch=false;
initGlobals();
sUE.setUEActivity(true);
sUE.prepareForNewPageLoad(isBookmarkPage);
if(isBookmarkPage){requestContext=$.extend(requestContext,{noScrollToTop:true,hideOtherDivs:true});
}var cacheInfo=sCache.getCachedSections(currHash);
var cachedSections=cacheInfo.sections;
var cacheName=cacheInfo.cache;
var hashInCache=utils.hasSections(cachedSections);
requestContext=$.extend(requestContext,{waitBuffer:[],fromCache:cacheName});
var missingSections=getMissingSections(cachedSections);
var url=constructAjaxUrl(fromHash,currHash,missingSections,isBookmarkPage);
var debugNoAjax=sessionContext.intReq&&utils.hasDebugParam(currHash,"noajax");
var reload=utils.getPar(utils.reloadre,url)=="1"||(sessionContext.onlyCacheAjax&&!hashInCache)||debugNoAjax;
requestContext=$.extend(requestContext,{url:url,sectionsToFetch:missingSections,forceReload:reload,debugNoAjax:debugNoAjax});
var hideOtherDivs=areOtherDivsHidden(fromHash,currHash);
hideChangedContents(fromHash,currHash,missingSections,hideOtherDivs);
if(typeof(resetVDS)=="function"){resetVDS();
}if(hashInCache){requestContext.waitForCache=true;
if(handleHistoryPage()){historyPageUpdateATF();
}else{sCache.getContentViaCallBack(currHash,cacheCallBack);
}}showProgressAnimation(hideOtherDivs);
if(utils.isValidHash(currHash)){requestContext.reloadUrl=utils.reconstructUrl(requestContext.debugNoAjax?utils.removeDebugParam(currHash,"noajax"):currHash);
}else{requestContext.reloadUrl=sessionContext.initPageUrl;
self.warning("requestHandler","bad hash",currHash);
}var requestKey=sCache.getCacheKey(currHash)+ajaxRequestNum++;
requestContext.streamingXhr=pa.loadStreaming(url,requestContext.reloadUrl,isEmptyRequest,ajaxResultsOK,ajaxResultsError,requestKey);
};
var getMissingSections=function(availableSections){var missingSecs=[];
for(var i in sections){if($.inArray(sections[i],availableSections)==-1){missingSecs.push(sections[i]);
}}if(missingSecs.length==0){if(handleHistoryPage()){missingSecs=missingSecs.concat(sections);
}else{missingSecs.push(utils.sectionName.NONE);
}}return missingSecs;
};
var initGlobals=function(){if(window.onbeforeunload){window.onbeforeunload();
}window.onbeforeunload=function(){};
};
var handleHistoryPage=function(){return sessionContext.logHistoryPage=="1"&&requestContext.fromCache==utils.cacheName.HISTORY;
};
var cacheCallBack=function(content,isOK){self.debug("cacheCallBack","size: "+content.length,"status: "+isOK);
if(!isOK){requestContext.forceReload=true;
var streamingXhr=requestContext.streamingXhr;
if(streamingXhr){if(streamingXhr.isRunning()){streamingXhr.abort(utils.serverCode.ERROR);
}else{streamingXhr.errorReload();
}}}else{var len=content.length;
for(var i=0;
i<len;
i++){updatePage(content[i]);
}}requestContext.waitForCache=false;
ajaxResultsOK(null,null,utils.ajaxReadyState.DONE);
};
var historyPageUpdateATF=function(){var content=sCache.getContent(requestContext.currHash);
var len=content.length;
self.debug("historyPageUpdateATF","size: "+len);
for(var i=0;
i<len;
i++){if(content[i].tagId=="FOLD"){requestContext.foldIndexInHistory=i+1;
break;
}updatePage(content[i]);
}};
var finalizeHistoryATF=function(){setTimeout(function(){if(handleHistoryPage()){historyPageUpdateBTF();
}},0);
};
var historyPageUpdateBTF=function(){var content=sCache.getContent(requestContext.currHash);
var len=content.length;
self.debug("historyPageUpdateBTF","size: "+len);
for(var i=requestContext.foldIndexInHistory;
i<len;
i++){updatePage(content[i]);
}requestContext.waitForCache=false;
ajaxResultsOK(null,null,utils.ajaxReadyState.DONE);
};
var hideChangedContents=function(fromHash,currHash,missingSections,hideOtherDivs){if(requestContext.forceReload){return;
}var currParts=sCache.getCacheKeyParts(sCache.getCacheKey(currHash));
iss.keyword(utils.getKeywordsDisplay(currParts.rh,utils.rhkeywordsre));
var divsToHide=[];
for(var section in sectionDivsToHide){var jQDivs=$(sectionDivsToHide[section]);
jQDivs.hide();
if(jQDivs&&$.inArray(section,missingSections)!=-1){divsToHide.push(jQDivs);
}}requestContext.divsToHide=divsToHide;
if(hideOtherDivs){$(otherDivsToHide).css("visibility","hidden");
requestContext.otherDivsHidden=true;
}if(!requestContext.noScrollToTop){window.scrollTo(0,0);
}};
var showProgressAnimation=function(hideOtherDivs){if(requestContext.forceReload){return;
}insertSpinner(document.getElementById(spinnerPosition),getHideWidth(hideOtherDivs));
};
var areOtherDivsHidden=function(fromHash,currHash){var s=sCache,fromParts=s.getCacheKeyParts(s.getCacheKey(fromHash)),currParts=s.getCacheKeyParts(s.getCacheKey(currHash));
return(fromParts.rh!=currParts.rh)||requestContext.hideOtherDivs;
};
var insertSpinner=function(domObj,hideDivWidth){if(domObj.id==spinnerPosition&&($("#"+domObj.id+"spacer").length==0)){var jqObj=$(domObj);
spinner.clone().attr("id",domObj.id+"spacer").height(spinnerHeight).width(spinnerWidth).css("left",(hideDivWidth-spinnerWidth)/2).insertAfter(jqObj);
}};
var getHideWidth=function(hideOtherDivs){return $("#center").width()-(hideOtherDivs?$("#leftNav").width():0);
};
var updatePage=function(divObj){if(!divObj){return;
}var timeAtResponse=now();
switch(divObj.data.type){case"HTML":var foundDiv=$("#"+divObj.tagId);
if(foundDiv.length>0){if(divObj.data.status==="ok"){if(!isPredictiveElem(divObj.tagId)){var htmlAndScripts=utils.separateScripts(divObj.data.value);
foundDiv.replaceWith(htmlAndScripts.strippedHTML);
utils.insertScripts(divObj.tagId,htmlAndScripts.Javascripts,htmlAndScripts.JScripts);
}else{foundDiv.replaceWith(divObj.data.value);
}}else{if(divObj.data.status==="empty"||divObj.data.status==="error"){foundDiv.empty();
}}}else{mDivs.put(divObj.tagId,divObj);
}var timeAfterProcess=now();
self.debug("div: "+divObj.tagId+". Time since last = "+(timeAtResponse-requestContext.timeSinceLast)+"ms. Processed in = "+(timeAfterProcess-timeAtResponse)+"ms.");
if(divObj.tagId=="atfResults"||divObj.tagId=="center"){sLogger.setElapsedData("ajax-atf",requestContext.timeZero);
self.debug("clickToATF = "+(timeAfterProcess-requestContext.timeZero)+"ms.");
}requestContext.timeSinceLast=timeAfterProcess;
break;
case"JAVASCRIPT":try{eval(divObj.data.value);
}catch(e){self.error("Invalid JavaScript in response");
return;
}break;
case"CSS":if(divObj.data.status==="ok"){utils.insertCss(divObj.data.value);
}break;
}};
var constructAjaxUrl=function(fromHash,currHash,sections,isBookmarkPage){var url=utils.constructAjaxUrl(fromHash,currHash,sections,false);
if(typeof(getResizeInfo)=="function"){url+=getResizeInfo();
}else{if(handleHistoryPage()){url+="&infoOnly=1";
}}if(isBookmarkPage){url+=("&rrid="+sessionContext.initRid);
}return url;
};
var isEmptyRequest=function(callBackContext,text,xhrReadyState){var isEmpty=false;
if(utils.getPar(utils.sectionre,requestContext.url)==utils.sectionName.NONE){isEmpty=true;
}else{if(requestContext.forceReload){isEmpty=true;
}}return isEmpty;
};
var ajaxResultsOK=function(callContext,pagelet,loadingStatus){if(requestContext.forceReload){return requestContext.debugNoAjax?utils.ajaxHandlerCode.DEBUG_NOAJAX:utils.ajaxHandlerCode.RELOAD;
}self.processATFImageLoad();
var bufferingStatus=handleBuffer(callContext,pagelet,loadingStatus);
if(bufferingStatus!=utils.ajaxHandlerCode.OK){return bufferingStatus;
}return processPagelet(callContext,pagelet,loadingStatus);
};
this.processATFImageLoad=function(){if(requestContext.atfImage){requestContext.atfImage.src=requestContext.atfImage.src;
if(utils.imgLoaded(requestContext.atfImage)){if(self.doATFImageLoad()){requestContext.atfImage=undefined;
}}}};
this.doATFImageLoad=function(){var status=false;
if(!sUE.atfRecorded()){var atfImage=requestContext.atfImage;
if(atfImage){var atfScript=atfImage.getAttribute("onload");
try{eval(atfScript);
status=true;
}catch(e){self.error("Invalid JavaScript in image onload: "+e);
}}}else{status=true;
}return status;
};
var processPagelet=function(callContext,pagelet,loadingStatus){var rid,payload;
if(!pagelet){return utils.ajaxHandlerCode.IGNORE;
}if(pagelet.trackingInfo){rid=pagelet.trackingInfo.rid;
sUE.updateRid(rid);
sLogger.updateRid(rid);
requestContext.qid=pagelet.trackingInfo.qid;
if(pagelet.trackingInfo.isUnsupportedRequest){return utils.ajaxHandlerCode.RELOAD;
}}else{payload=pagelet[utils.getKeys(pagelet)[0]];
if(payload&&payload.data&&payload.data.status=="fatal"){return utils.ajaxHandlerCode.PAGELET_FATAL;
}updatePage(payload);
}if(loadingStatus==utils.ajaxReadyState.DONE){postNewLoad(requestContext.currHash);
postLoad(requestContext.currHash);
}return utils.ajaxHandlerCode.OK;
};
var handleBuffer=function(callContext,pagelet,loadingStatus){status=utils.ajaxHandlerCode.OK;
if(requestContext.waitForCache){if(pagelet){var savedArgs={callContext:callContext,pagelet:pagelet,loadingStatus:loadingStatus};
requestContext.waitBuffer.push(savedArgs);
self.debug("handleBuffer: buffering "+utils.getKeys(pagelet)[0]+" at: "+(now()-requestContext.timeZero)+"ms.");
}if(loadingStatus==utils.ajaxReadyState.DONE){self.debug("handleBuffer: Buffering termination at: "+(now()-requestContext.timeZero)+"ms.");
}status=utils.ajaxHandlerCode.IGNORE;
}else{var len=requestContext.waitBuffer.length;
for(var i=0;
i<len;
i++){var callArgs=requestContext.waitBuffer[i];
self.debug("handleBuffer: emptying "+utils.getKeys(callArgs.pagelet)[0]);
status=processPagelet(callArgs.callContext,callArgs.pagelet,callArgs.loadingStatus);
if(status!=utils.ajaxHandlerCode.OK){break;
}}}return status;
};
var ajaxResultsError=function(callContext,data,handlerCode){return handlerCode;
};
this.ATFLoaded=function(){if(sessionContext.customAtfImageLoad&&sessionContext.ueDataEnabled){requestContext.atfImage=$("#atfResults .image img[onload]").get(0);
if(sessionContext.checkATFEarly){self.processATFImageLoad();
}}};
this.BTFLoaded=function(){if(sessionContext.customAtfImageLoad&&sessionContext.ueDataEnabled){requestContext.atfImage=$("#atfResults .image img[onload]").get(0);
if(sessionContext.checkATFEarly){self.processATFImageLoad();
}}amznJQ.onReady=function(){jqOnReadyArgs.push(arguments);
};
evalScripts("search-js-btf");
};
this.BTFJsLoaded=function(){amznJQ.onReady=function(){jqOnReadyArgs.push(arguments);
};
evalScripts("search-js-btf");
};
this.BTRLoaded=function(){evalScripts("search-js-btr");
evalScripts("centerBelow_ajaxJavascripts");
};
this.BTRJsLoaded=function(){evalScripts("search-js-btr");
evalScripts("centerBelow_ajaxJavascripts");
};
var evalScripts=function(id){$("#"+id).children("script").each(function(){eval($(this).html());
});
};
var postNewLoad=function(currHash){var divsToShow=requestContext.divsToHide;
for(var i in divsToShow){divsToShow[i].show();
var spacerToRemove="#"+divsToShow[i].attr("id")+"spacer";
$(spacerToRemove).remove();
}if(requestContext.otherDivsHidden){$(otherDivsToHide).css("visibility","visible");
}mDivs.clear();
sCache.clearPredictiveCache();
executeAmznJQOnReadyMethods();
sUE.manageLoad();
};
var postLoad=function(currHash){cachePageContent(currHash);
rewritePageLinks();
sessionContext.canPrefetch=true;
sLogger.flush();
$(document).trigger("searchajax",{});
};
var executeAmznJQOnReadyMethods=function(){amznJQ.onReady=jqOnReady;
$.each(jqOnReadyArgs,function(){jqOnReady.apply(amznJQ,this);
});
jqOnReadyArgs=[];
};
var cachePageContent=function(currHash){var predictivePagelets=self.getPageCacheData(PredictiveDivsConfig,true);
var nextPage=utils.getPage(!currHash?sessionContext.initPageHash:currHash)+1;
precacheImages(predictivePagelets);
sCache.storeContent(currHash,{page:nextPage},predictivePagelets,true);
if($.inArray(requestContext.pageStructure,supportedPages)!=-1){var historyRegions=self.getPageCacheData(PageRegionsConfig,false);
sCache.storeContent(currHash,undefined,historyRegions,false);
}if(sessionContext.useSessionStorage){sCache.storeCache();
}if(sessionContext.ajaxDebugEnabled&&sessionContext.dbgDisplay){ajaxDebug.initAjaxDebug();
}};
var rewritePageLinks=function(){if(sessionContext.pagn){$("#pagn a").each(function(){var t=$(this);
hrefRewrite(t.attr("href"),t);
});
fixResizeLinks(".SRSBottom a, .SRSTop a");
}if(typeof(setupVDS)=="function"){setupVDS(sessionContext.vdsTriggerOffset);
}if(sessionContext.sort){$("#sort").attr("onchange","").change(function(){$("#searchSortForm").submit();
});
$("#searchSortForm").submit(function(){var $form=$(this);
var sortHash=utils.computeHashForUrl($form.attr("action")+"?"+$form.serialize());
ph.advance(sortHash);
return false;
});
var sorta=$("#sortByEx_table .sortByAtfOption a");
sorta.add("#sortByBtf_content a").each(function(){var t=$(this);
if(hrefRewrite(t.attr("href"),t)){t.click(function(){var pop=$("#kindOfSortHotspot");
pop.trigger("closepopover");
pop.removeAmazonPopoverTrigger();
});
}});
}if(sessionContext.leftNav){$("#refinements").find("ul[data-typeid != 'n'][data-typeid != 'i']").find("li a").each(function(){var t=$(this);
if(!t.find(".seeMore").length&&!t.parent(".subgroup").length){hrefRewrite(t.attr("href"),t);
}});
var decodedBaseRH=decodeURIComponent(utils.extractBaseRH());
$("#breadCrumb a").each(function(){var t=$(this);
var href=t.attr("href");
if(utils.hasSameBrowseLadder(decodedBaseRH,decodeURIComponent(utils.getRH(href)))){hrefRewrite(t.attr("href"),t);
}});
}if(sessionContext.keyword){predictionModel.limit=sessionContext.predictionLimit||1,predictionModel.predictions=0;
issModel={form:$("form[name=site-search]"),min:sessionContext.issMin||3,threshold:sessionContext.issTime,count:sessionContext.issCount};
if(!sessionContext.keywordSubmitHooked){var f=selectPredictionModel(sessionContext.iss);
if(iss.suggest){iss.submit(submit);
iss.suggest(f);
}else{issModel.form.submit(submit);
searchBar().keypress(issAdapter(f));
}sessionContext.keywordSubmitHooked=true;
}if(sessionContext.rootNode==sessionContext.node||sessionContext.searchAlias=="aps"){$("#relatedSearches a").each(function(){var t=$(this);
hrefRewrite(t.attr("href"),t);
});
$("#didYouMean a").each(function(){var t=$(this);
hrefRewrite(t.attr("href"),t);
});
}}if(requestContext.reloadUrl){$("div.entity a").each(function(){var t=$(this),href=t.attr("href");
if(href.match(utils.wikiurlre)){var sparam="searchSource="+encodeURIComponent(requestContext.reloadUrl);
sparam=href.indexOf("?")==utils.NOTFOUND?"?":"&"+sparam;
var i=href.indexOf("#");
if(i==utils.NOTFOUND){t.attr("href",href+sparam);
}else{t.attr("href",href.substring(0,i-1)+sparam+href.substring(i));
}}});
}if(requestContext.reloadUrl){$("#hms-response-form input[name='url']").each(function(){var t=$(this);
t.attr("value",requestContext.reloadUrl);
});
}if(sessionContext.eb){editKeyword=function(kw){$.searchAjax.editKeyword(kw);
};
removeKeyword=function(){$.searchAjax.removeKeyword();
};
}};
function fixResizeLinks(div){$(div).each(function(){var t=$(this);
hrefRewrite(t.attr("href"),t);
var newUrl="";
var pairs=t.attr("href").split("&");
for(var i=0;
i<pairs.length;
i++){var kv=pairs[i].split("=",2);
var name=kv[0];
if(name!=="newDisplaySize"&&name!=="VDSAction2"){newUrl+="&"+name+"="+kv[1];
}}newUrl=newUrl.substr(1);
t.attr("href",newUrl);
});
}function issAdapter(f){return function(e){f(e.keyCode);
};
}function eligibleForKeyword(form){var sc=sessionContext,alias=sc.searchAlias,node=sc.node;
if(!sc.keyword||!alias||!node){return false;
}var nextNode,keywords,root=sc.rootNode,url=form.attr("action")+"?"+form.serialize(),decodedUrl=decodeURIComponent(url),nextSearchAlias=utils.getSearchAlias(decodedUrl);
if(nextSearchAlias&&(nextSearchAlias!==alias||(root&&(node!=root)))){return false;
}nextNode=utils.getNode(decodedUrl);
if((nextNode&&nextNode!==node)||(!nextSearchAlias&&!nextNode)){return false;
}keywords=utils.getKeywords(url);
if(alias=="aps"&&utils.isEmptySearch(keywords)){return false;
}return{keyword:keywords,url:url};
}function selectPredictionModel(i){return[predictStroke,predictTime,predictWord,function(){}][(i>0&&i<4)?i-1:3];
}function eligibleForPrediction(){if(!canPrefetch()){return false;
}if(predictionModel.predictions>=predictionModel.limit){return false;
}var ctx=eligibleForKeyword(issModel.form);
if(!ctx){return false;
}return true;
}function eligibleForISSPrediction(key,sl){if(!eligibleForPrediction()){return false;
}if(!sl){if(key<=40||key==45||key==46){return false;
}key=ctx.keyword+String.fromCharCode(key);
}if(key.length<issModel.min){return false;
}return decodeURIComponent(key);
}function doPredict(kw,sl){setTimeout(function(){if(kw=eligibleForISSPrediction(kw,sl)){predict(sl);
}},0);
}function predictStroke(kw,sl){doPredict(kw,sl);
}function predictTime(kw,sl){var t=now();
if(issModel.firstTime){if(t-issModel.firstTime>=issModel.threshold){doPredict(kw,sl);
}}else{issModel.firstTime=t;
}}function predictWord(kw,sl){}function getSuggestion(n,sl,k){if(!sl){k=$("#issDiv"+n).html();
if(k){k=k.replace(/ <span>.*<\/span>/,"");
k=k.replace(/<\/?b>/g,"");
}}else{if(sl.length>n&&sl[n]){k=sl[n].keyword;
}}return k;
}function getSuggestions(inx,len,sl,k){k=[];
if(inx>=0&&len>=0&&sl.length>0){while(inx<sl.length&&len>0){if(!sl||!sl[inx].categoryName){k.push(getSuggestion(inx,sl));
len--;
}inx++;
}}return k;
}function getPredictionQueries(k){var overrides=[],len=k.length,override={};
for(var i=0;
i<len;
i++){override={rh:utils.computeKeywordsRH(utils.prepareKeywordsForRH(k[i]))};
if(iss.encoding){var enc=iss.encoding();
if(enc&&enc.length==2){override[enc[0]]=encodeURI(enc[1]);
}}else{var encInput=issModel.form.find("input[name^='__mk_']");
if(encInput.length){override[encInput.attr("name")]=encodeURI(encInput.val());
}}overrides.push(override);
}return overrides;
}function predict(sl,k){var nRem=predictionModel.limit-predictionModel.predictions;
var n=Math.floor(nRem/issModel.count)?issModel.count:nRem;
k=getSuggestions(0,n,sl,k);
if(!k||!k.length){return;
}storePredictions(k,"iss");
}function submit(e){var ctx=eligibleForKeyword($(this)),h;
if(ctx){h=utils.computeHash(ctx.url)+"&rh="+utils.computeKeywordsRH(ctx.keyword);
ph.advance(h);
searchBar().blur();
}return !ctx;
}function predictPaste(e){if(!eligibleForPrediction()){return;
}var text=searchBar().val();
storePredictions([text],"pst");
}function storePredictions(keywords,predictMode){var overrides=getPredictionQueries(keywords);
predictionModel.predictions+=sCache.loadPredictiveContent(requestContext.currHash,overrides,predictMode,precacheImages);
}var hrefRewrite=function(url,a){if(utils.hasHash(url)||!url.indexOf("javascript")){return false;
}a.attr("href","#"+utils.computeHashForUrl(url));
return true;
};
var isPredictiveElem=function(id){var len=PredictiveDivsConfig.length;
for(var i=0;
i<len;
i++){if(PredictiveDivsConfig[i].id==id){return true;
}}return false;
};
this.preparePredictiveElement=function(id,element){if(element){var m=element.match(utils.commentre);
if(m&&m.length==2){element=m[1];
var n=element.match(utils.idre);
if(n&&n.length==2){element=($.trim(m[1]));
id=n[1];
}}}else{element="";
id="";
}return{"id":id,"element":element};
};
var precacheImages=function(contents){if(!sessionContext.precacheImages){return contents;
}$.each(contents,function(i,content){if(content&&content.tagId=="atfResults"){utils.precacheImages(content.data.value);
return false;
}});
return contents;
};
this.prepareHistoryElement=function(id,element){if(element&&(id=="leftNav"||id=="centerBelowExtra")){var domObj=document.getElementById(id);
var innerHtml="";
for(var i=0;
i<domObj.childNodes.length;
i++){var child=domObj.childNodes[i];
var childHtml=utils.elementHtmlByDom(child);
if(childHtml.indexOf("advertisingTable")!=-1){var newChild=$("<div>"+childHtml+"</div>");
newChild.find(".advertisingTable iframe").remove();
childHtml=newChild.html();
}innerHtml+=childHtml;
}var preparedHtml=utils.tagStart(domObj)+innerHtml+utils.tagEnd(domObj);
return preparedHtml;
}return element;
};
this.getPageCacheData=function(elemsConfig,isPredictive){var cacheData=[];
for(var i in elemsConfig){var id=elemsConfig[i].id;
var element=utils.elementHtml(id);
if(element){if(isPredictive){var predictiveElem=self.preparePredictiveElement(id,element);
id=predictiveElem.id;
element=predictiveElem.element;
}else{element=self.prepareHistoryElement(id,element);
}}cacheData.push(self.constructPageletData(id,"HTML",element));
var js=elemsConfig[i].js;
if(js){for(var j in js){cacheData.push(self.constructPageletData("","JAVASCRIPT",js[j]));
}}}return cacheData;
};
this.constructPageletData=function(tagId,type,value){return{"tagId":tagId,"data":{"status":"ok","type":type,"value":value}};
};
function canPrefetch(){return sessionContext.canPrefetch;
}this.printStats=function(){var sessionContextDump=sessionContext.ajaxDebugEnabled?ajaxDebug.dump(sessionContext):"";
return"The session context object <br> "+sessionContextDump;
};
this.editKeyword=function(kw){ph.advance(normalizedURL(kw).replace(/^\/gp\/search/,""));
};
this.removeKeyword=function(){ph.advance(normalizedURL().replace(/^\/gp\/search/,""));
};
this.postResizeLoad=function(){$.searchAjax.BTFJsLoaded();
$.searchAjax.BTRJsLoaded();
executeAmznJQOnReadyMethods();
};
};
amznJQ.declareAvailable("search-js-ajax");
});
});
});
amznJQ.available("jQuery",function(){amznJQ.available("search-js-ajax",function(){var $=jQuery;
$.searchSitewide=new function(){var self;
var ph;
var pa;
var utils;
var sessionContext={};
var spinnerSkeleton="<div id='main' style='margin-left:50%;margin-top:8px;'><div id='center'/><div id='centerBelow'/></div>";
this.init=function(context){self=$.searchSitewide;
self.debug("init");
sessionContext=$.extend(context,{loaded:false,debug:false});
ph=$.pageHooks;
pa=$.pageAjax;
utils=$.searchUtils;
};
this.isLoaded=function(){return sessionContext.loaded;
};
this.loadSiteWideHandler=function(e,fromHash,currHash){if(!sessionContext.loaded){sessionContext.loaded=true;
var content=$(sessionContext.contentDiv);
content.replaceWith(spinnerSkeleton);
$.each(sessionContext.css,function(index,value){utils.loadCss(value);
});
utils.insertCss("<style type='text/css'>.srSprite { background-image: url('"+sessionContext.sprite+"'); } </style>");
utils.insertCss("<style type='text/css'>.loadingSpinner { background-image: url('"+sessionContext.loadingSpinner+"'); background-repeat: no-repeat; } </style>");
self.debug("loadSiteWideHandler");
}};
this.debug=function(){var str="",i=arguments.length;
while(i-->0){str=arguments[i]+(str?" ":"")+str;
}str="SiteWide: "+str;
if(window.goN2Debug){;
}if(window.console&&window.console.log){console.log(str);
}};
};
amznJQ.declareAvailable("search-js-site-wide-ajax");
});
});
